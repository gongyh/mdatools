% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcrals.R
\name{mcrals}
\alias{mcrals}
\title{Multivariate curve resolution using Alternating Least Squares}
\usage{
mcrals(
  x,
  ncomp,
  cont.constraints = list(),
  spec.constraints = list(),
  max.niter = 100,
  exclrows = NULL,
  exclcols = NULL,
  verbose = FALSE,
  info = ""
)
}
\arguments{
\item{x}{spectra of mixtures (matrix or data frame).}

\item{ncomp}{number of components to calculate.}

\item{cont.constraints}{a list with constraints to be applied to contributions  (see details).}

\item{spec.constraints}{a list with constraints to be applied to spectra  (see details).}

\item{max.niter}{maximum number of iterations}

\item{exclrows}{rows to be excluded from calculations (numbers, names or vector with logical values).}

\item{exclcols}{columns to be excluded from calculations (numbers, names or vector with logical values).}

\item{info}{a short text with description of the case (optional).}
}
\value{
Returns an object of \code{\link{mcrpure}} class with the following fields:
\item{resspec}{matrix with resolved spectra.}
\item{rescont}{matrix with resolved contributions.}
\item{cont.constraints}{list with contribution constraints provided by user.}
\item{spec.constraints}{list with spectra constraints provided by user.}
\item{expvar }{vector with explained variance for each component (in percent).}
\item{cumexpvar }{vector with cumulative explained variance for each component (in percent).}
\item{ncomp}{number of resolved components}
\item{max.niter}{maximum number of iterations}
\item{info }{information about the model, provided by user when build the model.}


More details and examples can be found in the Bookdown tutorial.
}
\description{
\code{mcralls} allows to resolve spectroscopic data to linear combination of individual spectra
and contributions using the alternating least squares (ALS) algorithm with constraints.
}
\details{
The method implements the iterative ALS algorithm, where, at each iteration, spectra and
contributions of each chemical component are estimated and then a set of constraints is
applied to each. The method is well described in [1, 2].

The constraints for contributions and for spectra should be provided as a list with name of the
constraint and all necessary parameters. You can see which constraints and parameters are
currently supported by running \code{mcrals.constlist()}. See the code examples below or a
Bookdown tutorial for more details.
}
\examples{
library(mdatools)

# resolve mixture of carbonhydrates Raman spectra

data(carbs)
m = mcrpure(carbs$D, ncomp = 3)

# plot cumulative and individual explained variance
par(mfrow = c(1, 2))
plotVariance(m)
plotCumVariance(m)

# plot resolved spectra (all of them or individually)
par(mfrow = c(2, 1))
plotSpectra(m)
plotSpectra(m, comp = 2:3)

# plot resolved contributions (all of them or individually)
par(mfrow = c(2, 1))
plotContributions(m)
plotContributions(m, comp = 2:3)

# of course you can do this manually as well, e.g. show original
# and resolved spectra
par(mfrow = c(1, 1))
mdaplotg(
   list(
      "original" = prep.norm(carbs$D, "area"),
      "resolved" = prep.norm(mda.subset(mda.t(m$resspec), 1), "area")
   ), col = c("gray", "red"), type = "l"
)

# in case if you have reference spectra of components you can compare them with
# the resolved ones:
par(mfrow = c(3, 1))
for (i in 1:3) {
   mdaplotg(
      list(
         "pure" = prep.norm(mda.subset(mda.t(carbs$S), 1), "area"),
         "resolved" = prep.norm(mda.subset(mda.t(m$resspec), 1), "area")
      ), col = c("gray", "red"), type = "l", lwd = c(3, 1)
   )
}

# See bookdown tutorial for more details.

}
\references{
1. J. Jaumot, R. Gargallo, A. de Juan, and R. Tauler, "A graphical user-friendly interface for
MCR-ALS: a new tool for multivariate curve resolution in MATLAB", Chemometrics and Intelligent #' Laboratory Systems 76, 101-110 (2005).

2.
}
\seealso{
Methods for \code{mcrals} objects:
\tabular{ll}{
   \code{summary.mcrals} \tab shows some statistics for the case.\cr
   \code{\link{unmix.mcrals}} \tab makes unmixing of new set of spectra.\cr
   \code{\link{predict.mcr}} \tab computes contributions by projection of new spectra to
   the resolved ones.\cr
}

Plotting methods for \code{mcrals} objects:
\tabular{ll}{
   \code{\link{plotSpectra.mcr}} \tab shows plot with resolved spectra.\cr
   \code{\link{plotContributions.mcr}} \tab shows plot with resolved contributions.\cr
   \code{\link{plotVariance.mcr}} \tab shows plot with explained variance.\cr
   \code{\link{plotCumVariance.mcr}} \tab shows plot with cumulative explained variance.\cr
}
}
\author{
Sergey Kucheryavskiy (svkucheryavski@gmail.com)
}
